



#路由规则配置--传统方式,通配符? * **
#zuul.routes.api-a-url.path=/api-a-url/**
#zuul.routes.api-a-url.url=localhost:7002,localhost:7004
#面向服务的路由,zull已经默认给每个服务配好了，把请求链接中api-a改为serviceid即可,
# 多个路由配置时，按先后顺序匹配,使用yml才生效

zuul.routes.api-a.path=/api-a/**
##测试 http://localhost:7008/api-a/user/get
zuul.routes.api-a.service-id=hello-service

zuul.routes.api-b.path=/api-b/**
zuul.routes.api-b.service-id=feignconsumer-service
#如果使用这个，zuul将对所有服务不自动创建路由规则/**/hello/**
#zuul.ignored-services=*

#zull默认会过滤掉http请求头的一些敏感信息，包括cookie,Set-Cookie,Authorization,可以自定义开启
#zuul.sensitive-headers=  不推荐
#可用
zuul.routes.hello-service.custom-sensitive-headers=true
zuul.routes.hello-service.sensitive-headers=
#防止使用web实例地址，而用网关路由地址
zuul.add-host-header=true
#hystrix
hystrix.command.default.execution.isolation.thread.timeoutInMilliSeconds=2000
ribbon.ConnectTimeout=2000
ribbon.ReadTimeout=2000
#全局重试
zuul.retryable=true
#某个重试
zuul.routes.hello-service.retryable=true
#禁用过滤器
zuul.AccessFilter.pre.disable=false

